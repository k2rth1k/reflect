{"version":3,"file":"main_window/preload.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,W,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,MCnBA,eAKA,EAAAQ,cAAcC,kBAAkB,cAAe,CAC3CC,kBAAmB,IAA8B,EAAAC,YAAYC,OAAO,sBACpEC,gBAAiB,IAAyB,EAAAF,YAAYC,OAAO,oBAC7DE,iBAAkB,IAA6B,EAAAH,YAAYC,OAAO,uB","sources":["webpack://my-app/external commonjs2 \"electron\"","webpack://my-app/webpack/bootstrap","webpack://my-app/./src/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// See the Electron documentation for details on how to use preload scripts:\n// https://www.electronjs.org/docs/latest/tutorial/process-model#preload-scripts\n\nimport {contextBridge, ipcRenderer} from 'electron';\nimport {WorkoutData} from \"./database/DatabaseService\";\nimport {WeeklySets} from \"./database/queryTypes\";\n\n// Expose database API to renderer process\ncontextBridge.exposeInMainWorld('electronAPI', {\n    getAllWorkoutData: (): Promise<WorkoutData[]> => ipcRenderer.invoke('db:get-workout-raw'),\n    getAllExercises: (): Promise<string[]> => ipcRenderer.invoke('db:get-exercises'),\n    getAllWeeklySets: (): Promise<WeeklySets[]> => ipcRenderer.invoke('db:get-weekly-sets')\n});\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","contextBridge","exposeInMainWorld","getAllWorkoutData","ipcRenderer","invoke","getAllExercises","getAllWeeklySets"],"sourceRoot":""}